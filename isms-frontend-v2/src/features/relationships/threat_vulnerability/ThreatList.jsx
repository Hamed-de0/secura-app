// src/features/relationships/threat_vulnerability/ThreatList.jsx

import React, { useMemo, useState } from 'react';
import {
  Box,
  List,
  ListItem,
  ListItemText,
  Paper,
  Typography,
  Select,
  MenuItem,
  InputLabel,
  FormControl,
} from '@mui/material';

const ThreatList = ({ threats, selectedThreat, onSelectThreat }) => {
  const [selectedCategory, setSelectedCategory] = useState('All');

  const categories = useMemo(() => {
    const unique = Array.from(new Set(threats.map((t) => t.category).filter(Boolean)));
    return ['All', ...unique];
  }, [threats]);

  const filteredThreats = useMemo(() => {
    return selectedCategory === 'All'
      ? threats
      : threats.filter((t) => t.category === selectedCategory);
  }, [threats, selectedCategory]);

  return (
    <Paper sx={{ height: '100%', p: 2 }}>
      <Typography variant="h6" gutterBottom>
        Threats
      </Typography>

      <FormControl fullWidth size="small" sx={{ mb: 2 }}>
        <InputLabel>Category</InputLabel>
        <Select
          value={selectedCategory}
          label="Category"
          onChange={(e) => setSelectedCategory(e.target.value)}
        >
          {categories.map((cat) => (
            <MenuItem key={cat} value={cat}>
              {cat}
            </MenuItem>
          ))}
        </Select>
      </FormControl>

      <List dense sx={{ maxHeight: '65vh', overflowY: 'auto' }}>
        {filteredThreats.map((threat) => (
          <ListItem
            key={threat.id}
            button
            selected={selectedThreat?.id === threat.id}
            onClick={() => onSelectThreat(threat)}
          >
            <ListItemText
              primary={threat.name}
              secondary={threat.reference_code || threat.source}
            />
          </ListItem>
        ))}
      </List>
    </Paper>
  );
};

export default ThreatList;
