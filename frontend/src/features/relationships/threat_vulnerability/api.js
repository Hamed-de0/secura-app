import axios from 'axios'  
import configs from '../../configs';
export const getThreats = () => axios.get(`${configs.API_BASE_URL}/risks/threats`)
export const getVulnerabilities = () => axios.get(`${configs.API_BASE_URL}/risks/vulnerabilities/`)


// POST /risks/threat-vulnerability-link/
export const createLink = (payload) => {
  return axios.post('/risks/threat-vulnerability-link/', payload);
};

// DELETE /risks/threat-vulnerability-link/{link_id}
export const deleteLink = (linkId) => {
  return axios.delete(`/risks/threat-vulnerability-link/${linkId}`);
};

// GET /risks/threat-vulnerability-link/by-threat/{threat_id}
export const getLinksByThreat = (threatId) => {
  return axios.get(`/risks/threat-vulnerability-link/by-threat/${threatId}`);
};

// GET /risks/threat-vulnerability-link/by-vulnerability/{vuln_id}
export const getLinksByVulnerability = (vulnId) => {
  return axios.get(`/risks/threat-vulnerability-link/by-vulnerability/${vulnId}`);
};

// Optional: GET all
export const getAllLinks = () => {
  return axios.get('/risks/threat-vulnerability-link/');
};


export const getThreatVulnerabilities = async (threatId) => {
  const res = await axios.get(`${configs.API_BASE_URL}/risks/threat-vulnerability-link/by-threat/${threatId}`)
  return {
    data: res.data.map(link => ({
      id: link.vulnerability.id,
      name: link.vulnerability.name,
      link_id: link.id,
    }))
  }
}

export const updateThreatVulnerabilities = async (threatId, selectedVulnIds) => {
  const currentLinksRes = await axios.get(`${configs.API_BASE_URL}/risks/threat-vulnerability-link/by-threat/${threatId}`)
  const currentLinks = currentLinksRes.data

  const currentVulnMap = new Map()
  currentLinks.forEach(link => currentVulnMap.set(link.vulnerability.id, link.id))

  const currentIds = new Set(currentLinks.map(link => link.vulnerability.id))
  const selectedIds = new Set(selectedVulnIds)

  const toAdd = [...selectedIds].filter(id => !currentIds.has(id))
  const toRemove = [...currentIds].filter(id => !selectedIds.has(id))

  // Add new links
  for (let id of toAdd) {
    await axios.post(`${configs.API_BASE_URL}/risks/threat-vulnerability-link/`, {
      threat_id: threatId,
      vulnerability_id: id
    })
  }

  // Delete removed links
  for (let id of toRemove) {
    const linkId = currentVulnMap.get(id)
    await axios.delete(`${configs.API_BASE_URL}/risks/threat-vulnerability-link/${linkId}`)
  }
}
