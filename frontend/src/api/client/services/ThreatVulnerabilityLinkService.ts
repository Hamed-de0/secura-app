/* generated using openapi-typescript-codegen -- do not edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { VulnerabilityThreatLinkCreate } from '../models/VulnerabilityThreatLinkCreate';
import type { VulnerabilityThreatLinkRead } from '../models/VulnerabilityThreatLinkRead';
import type { CancelablePromise } from '../core/CancelablePromise';
import { OpenAPI } from '../core/OpenAPI';
import { request as __request } from '../core/request';
export class ThreatVulnerabilityLinkService {
    /**
     * Create Link
     * @param requestBody
     * @returns VulnerabilityThreatLinkRead Successful Response
     * @throws ApiError
     */
    public static createLinkRisksThreatVulnerabilityLinkPost(
        requestBody: VulnerabilityThreatLinkCreate,
    ): CancelablePromise<VulnerabilityThreatLinkRead> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/risks/threat-vulnerability-link/',
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Read All
     * @param skip
     * @param limit
     * @returns VulnerabilityThreatLinkRead Successful Response
     * @throws ApiError
     */
    public static readAllRisksThreatVulnerabilityLinkGet(
        skip?: number,
        limit: number = 100,
    ): CancelablePromise<Array<VulnerabilityThreatLinkRead>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/risks/threat-vulnerability-link/',
            query: {
                'skip': skip,
                'limit': limit,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Link
     * @param linkId
     * @returns VulnerabilityThreatLinkRead Successful Response
     * @throws ApiError
     */
    public static deleteLinkRisksThreatVulnerabilityLinkLinkIdDelete(
        linkId: number,
    ): CancelablePromise<VulnerabilityThreatLinkRead> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/risks/threat-vulnerability-link/{link_id}',
            path: {
                'link_id': linkId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get By Threat
     * @param threatId
     * @returns VulnerabilityThreatLinkRead Successful Response
     * @throws ApiError
     */
    public static getByThreatRisksThreatVulnerabilityLinkByThreatThreatIdGet(
        threatId: number,
    ): CancelablePromise<Array<VulnerabilityThreatLinkRead>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/risks/threat-vulnerability-link/by-threat/{threat_id}',
            path: {
                'threat_id': threatId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get By Vulnerability
     * @param vulnId
     * @returns VulnerabilityThreatLinkRead Successful Response
     * @throws ApiError
     */
    public static getByVulnerabilityRisksThreatVulnerabilityLinkByVulnerabilityVulnIdGet(
        vulnId: number,
    ): CancelablePromise<Array<VulnerabilityThreatLinkRead>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/risks/threat-vulnerability-link/by-vulnerability/{vuln_id}',
            path: {
                'vuln_id': vulnId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
}
