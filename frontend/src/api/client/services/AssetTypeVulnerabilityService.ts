/* generated using openapi-typescript-codegen -- do not edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { AssetTypeVulnerabilityLinkCreate } from '../models/AssetTypeVulnerabilityLinkCreate';
import type { AssetTypeVulnerabilityLinkDetails } from '../models/AssetTypeVulnerabilityLinkDetails';
import type { AssetTypeVulnerabilityLinkInsert } from '../models/AssetTypeVulnerabilityLinkInsert';
import type { AssetTypeVulnerabilityLinkOut } from '../models/AssetTypeVulnerabilityLinkOut';
import type { CancelablePromise } from '../core/CancelablePromise';
import { OpenAPI } from '../core/OpenAPI';
import { request as __request } from '../core/request';
export class AssetTypeVulnerabilityService {
    /**
     * Create Link Bulk
     * @param requestBody
     * @returns AssetTypeVulnerabilityLinkOut Successful Response
     * @throws ApiError
     */
    public static createLinkBulkAssetTypeVulnerabilityLinkBulkInsertPost(
        requestBody: Array<AssetTypeVulnerabilityLinkInsert>,
    ): CancelablePromise<Array<AssetTypeVulnerabilityLinkOut>> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/asset-type-vulnerability-link/bulk-insert',
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Link
     * @param requestBody
     * @returns AssetTypeVulnerabilityLinkOut Successful Response
     * @throws ApiError
     */
    public static createLinkAssetTypeVulnerabilityLinkPost(
        requestBody: AssetTypeVulnerabilityLinkCreate,
    ): CancelablePromise<AssetTypeVulnerabilityLinkOut> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/asset-type-vulnerability-link/',
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Links
     * @param assetTypeId
     * @returns AssetTypeVulnerabilityLinkDetails Successful Response
     * @throws ApiError
     */
    public static getLinksAssetTypeVulnerabilityLinkByAssetTypeAssetTypeIdByNameGet(
        assetTypeId: number,
    ): CancelablePromise<Array<AssetTypeVulnerabilityLinkDetails>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/asset-type-vulnerability-link/by-asset-type/{asset_type_id}/by-name',
            path: {
                'asset_type_id': assetTypeId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Links
     * @param assetTypeId
     * @returns AssetTypeVulnerabilityLinkOut Successful Response
     * @throws ApiError
     */
    public static getLinksAssetTypeVulnerabilityLinkByAssetTypeAssetTypeIdGet(
        assetTypeId: number,
    ): CancelablePromise<Array<AssetTypeVulnerabilityLinkOut>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/asset-type-vulnerability-link/by-asset-type/{asset_type_id}',
            path: {
                'asset_type_id': assetTypeId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Link
     * @param linkId
     * @returns any Successful Response
     * @throws ApiError
     */
    public static deleteLinkAssetTypeVulnerabilityLinkLinkIdDelete(
        linkId: number,
    ): CancelablePromise<any> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/asset-type-vulnerability-link/{link_id}',
            path: {
                'link_id': linkId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
}
