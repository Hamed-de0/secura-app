from fastapi import APIRouter, Depends
from sqlalchemy.orm import Session
from app.database import get_db
from app.schemas.assets import (
    AssetTypeVulnerabilityLinkCreate,
    AssetTypeVulnerabilityLinkOut,
    AssetTypeVulnerabilityLinkDetails,
    AssetTypeVulnerabilityLinkInsert)
from app.crud.assets import asset_type_vulnerability_link, get_links_by_asset_type_by_name
from typing import List

router = APIRouter(prefix="/asset-type-vulnerability-link", tags=["Asset Type â†” Vulnerability"])

@router.post("/bulk-insert", response_model=List[AssetTypeVulnerabilityLinkOut])
def create_link(links: List[AssetTypeVulnerabilityLinkInsert], db: Session = Depends(get_db)):
    return asset_type_vulnerability_link.create_link_bulk(db, links)


@router.post("/", response_model=AssetTypeVulnerabilityLinkOut)
def create_link(link: AssetTypeVulnerabilityLinkCreate, db: Session = Depends(get_db)):
    return asset_type_vulnerability_link.create_link(db, link)

@router.get("/by-asset-type/{asset_type_id}/by-name", response_model=list[AssetTypeVulnerabilityLinkDetails])
def get_links(asset_type_id: int, db: Session = Depends(get_db)):
    return get_links_by_asset_type_by_name(db, asset_type_id)

@router.get("/by-asset-type/{asset_type_id}", response_model=list[AssetTypeVulnerabilityLinkOut])
def get_links(asset_type_id: int, db: Session = Depends(get_db)):
    return asset_type_vulnerability_link.get_links_by_asset_type(db, asset_type_id)

@router.delete("/{link_id}")
def delete_link(link_id: int, db: Session = Depends(get_db)):
    asset_type_vulnerability_link.delete_link(db, link_id)
    return {"message": "Link deleted"}
