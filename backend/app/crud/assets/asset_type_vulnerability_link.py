from sqlalchemy.orm import Session
from app.models.assets.asset_type_vulnerability_link import AssetTypeVulnerabilityLink
from app.schemas.assets.asset_type_vulnerability_link import AssetTypeVulnerabilityLinkCreate
from app.models.risks.vulnerability import Vulnerability
def create_link(db: Session, link: AssetTypeVulnerabilityLinkCreate):
    db_link = AssetTypeVulnerabilityLink(**link.dict())
    db.add(db_link)
    db.commit()
    db.refresh(db_link)
    return db_link

def get_links_by_asset_type(db: Session, asset_type_id: int):
    return db.query(AssetTypeVulnerabilityLink).filter_by(asset_type_id=asset_type_id).all()

def get_links_by_asset_type_by_name(db: Session, asset_type_id: int):
    results = (
        db.query(
            AssetTypeVulnerabilityLink.id,
            AssetTypeVulnerabilityLink.vulnerability_id,
            AssetTypeVulnerabilityLink.asset_type_id,
            AssetTypeVulnerabilityLink.score,
            AssetTypeVulnerabilityLink.justification,
            Vulnerability.reference_code,
            Vulnerability.name,
            Vulnerability.category,
            Vulnerability.source,
            Vulnerability.description,
        )
        .join(Vulnerability, Vulnerability.id == AssetTypeVulnerabilityLink.vulnerability_id)
        .filter(AssetTypeVulnerabilityLink.asset_type_id == asset_type_id)
        .all()
    )

    return results


def delete_link(db: Session, link_id: int):
    db.query(AssetTypeVulnerabilityLink).filter_by(id=link_id).delete()
    db.commit()
