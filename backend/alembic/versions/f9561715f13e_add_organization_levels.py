"""add organization levels

Revision ID: f9561715f13e
Revises: f9feb48be701
Create Date: 2025-08-15 22:52:03.076332

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f9561715f13e'
down_revision: Union[str, Sequence[str], None] = 'f9feb48be701'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('org_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('org_entities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('regulatory_profile', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['org_groups.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('org_business_units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('regulatory_profile', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['org_entities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entity_id', 'code', name='uq_bu_entity_code')
    )
    op.create_table('org_sites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['org_entities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entity_id', 'code', name='uq_site_entity_code')
    )
    op.create_table('org_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_entity_id', sa.Integer(), nullable=False),
    sa.Column('provider_bu_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=60), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('service_type', sa.String(length=40), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['provider_bu_id'], ['org_business_units.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['provider_entity_id'], ['org_entities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('org_service_consumers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('consumer_entity_id', sa.Integer(), nullable=False),
    sa.Column('consumer_bu_id', sa.Integer(), nullable=True),
    sa.Column('inheritance_type', sa.String(length=16), nullable=False),
    sa.Column('responsibility', sa.String(length=16), nullable=False),
    sa.Column('residual_consumer_tasks', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('agreement_type', sa.String(length=16), nullable=True),
    sa.Column('agreement_ref', sa.String(length=200), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['consumer_bu_id'], ['org_business_units.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['consumer_entity_id'], ['org_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['org_services.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_id', 'consumer_entity_id', 'consumer_bu_id', name='uq_service_consumer_unique')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('org_service_consumers')
    op.drop_table('org_services')
    op.drop_table('org_sites')
    op.drop_table('org_business_units')
    op.drop_table('org_entities')
    op.drop_table('org_groups')
    # ### end Alembic commands ###
