"""scope migration to risk_appetite

Revision ID: 17a1d4137166
Revises: 6fc58a7cf947
Create Date: 2025-08-21 22:02:28.548951

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '17a1d4137166'
down_revision: Union[str, Sequence[str], None] = '6fc58a7cf947'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('risk_appetite_policies', sa.Column('scope', sa.String(length=32), nullable=True))
    op.add_column('risk_appetite_policies', sa.Column('scope_id', sa.Integer(), nullable=True))
    op.create_index('idx_rap_domain', 'risk_appetite_policies', ['domain'], unique=False)
    op.create_index('idx_rap_effective', 'risk_appetite_policies', ['effective_from', 'effective_to'], unique=False)
    op.create_index('idx_rap_priority', 'risk_appetite_policies', ['priority'], unique=False)
    op.create_index('idx_rap_scope', 'risk_appetite_policies', ['scope', 'scope_id'], unique=False)
    op.drop_constraint(op.f('risk_appetite_policies_asset_group_id_fkey'), 'risk_appetite_policies', type_='foreignkey')
    op.drop_constraint(op.f('risk_appetite_policies_asset_tag_id_fkey'), 'risk_appetite_policies', type_='foreignkey')
    op.drop_constraint(op.f('risk_appetite_policies_asset_type_id_fkey'), 'risk_appetite_policies', type_='foreignkey')
    op.drop_column('risk_appetite_policies', 'asset_type_id')
    op.drop_column('risk_appetite_policies', 'asset_group_id')
    op.drop_column('risk_appetite_policies', 'asset_tag_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('risk_appetite_policies', sa.Column('asset_tag_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('risk_appetite_policies', sa.Column('asset_group_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('risk_appetite_policies', sa.Column('asset_type_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('risk_appetite_policies_asset_type_id_fkey'), 'risk_appetite_policies', 'asset_types', ['asset_type_id'], ['id'])
    op.create_foreign_key(op.f('risk_appetite_policies_asset_tag_id_fkey'), 'risk_appetite_policies', 'asset_tags', ['asset_tag_id'], ['id'])
    op.create_foreign_key(op.f('risk_appetite_policies_asset_group_id_fkey'), 'risk_appetite_policies', 'asset_groups', ['asset_group_id'], ['id'])
    op.drop_index('idx_rap_scope', table_name='risk_appetite_policies')
    op.drop_index('idx_rap_priority', table_name='risk_appetite_policies')
    op.drop_index('idx_rap_effective', table_name='risk_appetite_policies')
    op.drop_index('idx_rap_domain', table_name='risk_appetite_policies')
    op.drop_column('risk_appetite_policies', 'scope_id')
    op.drop_column('risk_appetite_policies', 'scope')
    # ### end Alembic commands ###
