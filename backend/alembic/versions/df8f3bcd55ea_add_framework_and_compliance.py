"""add framework and compliance

Revision ID: df8f3bcd55ea
Revises: 8c62d8f55207
Create Date: 2025-08-13 17:49:08.291493

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'df8f3bcd55ea'
down_revision: Union[str, Sequence[str], None] = '8c62d8f55207'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('frameworks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('owner', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.String(length=1024), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('framework_activation_policies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('framework_id', sa.Integer(), nullable=False),
    sa.Column('asset_type_id', sa.Integer(), nullable=True),
    sa.Column('asset_tag_id', sa.Integer(), nullable=True),
    sa.Column('asset_group_id', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('effective_from', sa.DateTime(), nullable=True),
    sa.Column('effective_to', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['asset_group_id'], ['asset_groups.id'], ),
    sa.ForeignKeyConstraint(['asset_tag_id'], ['asset_tags.id'], ),
    sa.ForeignKeyConstraint(['asset_type_id'], ['asset_types.id'], ),
    sa.ForeignKeyConstraint(['framework_id'], ['frameworks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('framework_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('framework_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('notes', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['framework_id'], ['frameworks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('framework_id', 'code', name='uq_fw_req_code')
    )
    op.create_table('control_framework_mappings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('framework_requirement_id', sa.Integer(), nullable=False),
    sa.Column('control_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['control_id'], ['controls.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['framework_requirement_id'], ['framework_requirements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('framework_requirement_id', 'control_id', name='uq_req_ctrl')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('control_framework_mappings')
    op.drop_table('framework_requirements')
    op.drop_table('framework_activation_policies')
    op.drop_table('frameworks')
    # ### end Alembic commands ###
