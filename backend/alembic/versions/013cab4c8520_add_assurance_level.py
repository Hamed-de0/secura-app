"""add assurance level

Revision ID: 013cab4c8520
Revises: 9b813b7e2286
Create Date: 2025-08-14 13:41:37.039880

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '013cab4c8520'
down_revision: Union[str, Sequence[str], None] = '9b813b7e2286'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evidence_policy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('control_id', sa.Integer(), nullable=True),
    sa.Column('framework_requirement_id', sa.Integer(), nullable=True),
    sa.Column('freshness_days', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.CheckConstraint('(control_id IS NOT NULL AND framework_requirement_id IS NULL) OR (control_id IS NULL AND framework_requirement_id IS NOT NULL)', name='ck_evp_exactly_one_target'),
    sa.ForeignKeyConstraint(['control_id'], ['controls.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['framework_requirement_id'], ['framework_requirements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('control_id', name='uq_evp_control_once'),
    sa.UniqueConstraint('framework_requirement_id', name='uq_evp_requirement_once')
    )
    op.create_table('control_evidence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('control_context_link_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('evidence_type', sa.String(length=30), nullable=False),
    sa.Column('evidence_url', sa.Text(), nullable=True),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('collected_at', sa.Date(), nullable=False),
    sa.Column('valid_until', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('created_by', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['control_context_link_id'], ['control_context_links.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('control_context_links', sa.Column('assurance_status', sa.String(length=50), nullable=False))
    op.add_column('control_context_links', sa.Column('status_updated_at', sa.DateTime(), nullable=False))
    op.add_column('control_context_links', sa.Column('notes', sa.Text(), nullable=True))
    op.drop_column('control_context_links', 'evidence_url')
    op.drop_column('control_context_links', 'status')
    op.drop_column('control_context_links', 'expires_at')
    op.drop_column('control_context_links', 'evidence_note')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('control_context_links', sa.Column('evidence_note', sa.VARCHAR(length=1024), autoincrement=False, nullable=True))
    op.add_column('control_context_links', sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('control_context_links', sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=True))
    op.add_column('control_context_links', sa.Column('evidence_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    op.drop_column('control_context_links', 'notes')
    op.drop_column('control_context_links', 'status_updated_at')
    op.drop_column('control_context_links', 'assurance_status')
    op.drop_table('control_evidence')
    op.drop_table('evidence_policy')
    # ### end Alembic commands ###
