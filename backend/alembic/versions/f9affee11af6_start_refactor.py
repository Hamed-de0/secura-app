"""start refactor

Revision ID: f9affee11af6
Revises: dfb5cd72fccf
Create Date: 2025-07-24 10:06:40.517204

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f9affee11af6'
down_revision: Union[str, Sequence[str], None] = 'dfb5cd72fccf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('asset_groups', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_foreign_key(None, 'asset_groups', 'asset_groups', ['parent_id'], ['id'])
    op.create_foreign_key(None, 'asset_lifecycle_events', 'assets', ['asset_id'], ['id'])
    op.create_foreign_key(None, 'asset_maintenance', 'assets', ['asset_id'], ['id'])
    op.create_foreign_key(None, 'asset_owners', 'assets', ['asset_id'], ['id'])
    op.create_foreign_key(None, 'asset_owners', 'persons', ['person_id'], ['id'])
    op.create_foreign_key(None, 'asset_relations', 'assets', ['asset_id'], ['id'])
    op.create_foreign_key(None, 'asset_relations', 'assets', ['related_asset_id'], ['id'])
    op.create_foreign_key(None, 'asset_scans', 'assets', ['asset_id'], ['id'])
    op.create_unique_constraint(None, 'asset_security_profiles', ['asset_id'])
    op.create_foreign_key(None, 'asset_security_profiles', 'assets', ['asset_id'], ['id'])
    op.alter_column('asset_tags', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.create_unique_constraint(None, 'asset_tags', ['name'])
    op.create_foreign_key(None, 'asset_tags_links', 'assets', ['asset_id'], ['id'])
    op.create_foreign_key(None, 'asset_tags_links', 'asset_tags', ['tag_id'], ['id'])
    op.alter_column('asset_types', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.create_unique_constraint(None, 'asset_types', ['name'])
    op.create_unique_constraint(None, 'assets', ['uuid'])
    op.alter_column('persons', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('persons', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.create_index(op.f('ix_persons_id'), 'persons', ['id'], unique=False)
    op.create_unique_constraint(None, 'persons', ['email'])
    op.alter_column('threats', 'name',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('vulnerabilities', 'name',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.create_unique_constraint(None, 'vulnerabilities', ['name'])
    op.create_foreign_key(None, 'vulnerability_threat_links', 'vulnerabilities', ['vulnerability_id'], ['id'])
    op.create_foreign_key(None, 'vulnerability_threat_links', 'threats', ['threat_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vulnerability_threat_links', type_='foreignkey')
    op.drop_constraint(None, 'vulnerability_threat_links', type_='foreignkey')
    op.drop_constraint(None, 'vulnerabilities', type_='unique')
    op.alter_column('vulnerabilities', 'name',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('threats', 'name',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.drop_constraint(None, 'persons', type_='unique')
    op.drop_index(op.f('ix_persons_id'), table_name='persons')
    op.alter_column('persons', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('persons', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_constraint(None, 'assets', type_='unique')
    op.drop_constraint(None, 'asset_types', type_='unique')
    op.alter_column('asset_types', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_constraint(None, 'asset_tags_links', type_='foreignkey')
    op.drop_constraint(None, 'asset_tags_links', type_='foreignkey')
    op.drop_constraint(None, 'asset_tags', type_='unique')
    op.alter_column('asset_tags', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_constraint(None, 'asset_security_profiles', type_='foreignkey')
    op.drop_constraint(None, 'asset_security_profiles', type_='unique')
    op.drop_constraint(None, 'asset_scans', type_='foreignkey')
    op.drop_constraint(None, 'asset_relations', type_='foreignkey')
    op.drop_constraint(None, 'asset_relations', type_='foreignkey')
    op.drop_constraint(None, 'asset_owners', type_='foreignkey')
    op.drop_constraint(None, 'asset_owners', type_='foreignkey')
    op.drop_constraint(None, 'asset_maintenance', type_='foreignkey')
    op.drop_constraint(None, 'asset_lifecycle_events', type_='foreignkey')
    op.drop_constraint(None, 'asset_groups', type_='foreignkey')
    op.alter_column('asset_groups', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    # ### end Alembic commands ###
