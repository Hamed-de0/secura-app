"""add obligations

Revision ID: 27b8a7683a1e
Revises: d5bfe846097c
Create Date: 2025-08-15 19:43:22.688864

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '27b8a7683a1e'
down_revision: Union[str, Sequence[str], None] = 'd5bfe846097c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('obligation_atoms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('framework_requirement_id', sa.Integer(), nullable=False),
    sa.Column('atom_key', sa.String(length=50), nullable=False),
    sa.Column('role', sa.String(length=40), nullable=True),
    sa.Column('obligation_text', sa.Text(), nullable=False),
    sa.Column('condition', sa.Text(), nullable=True),
    sa.Column('outcome', sa.Text(), nullable=True),
    sa.Column('citation', sa.Text(), nullable=True),
    sa.Column('applicability', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('evidence_hint', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('sort_index', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['framework_requirement_id'], ['framework_requirements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('framework_requirement_id', 'atom_key', name='uq_atom_req_key')
    )
    op.add_column('control_framework_mappings', sa.Column('obligation_atom_id', sa.Integer(), nullable=True))
    op.add_column('control_framework_mappings', sa.Column('relation_type', sa.String(length=16), nullable=True))
    op.add_column('control_framework_mappings', sa.Column('coverage_level', sa.String(length=16), nullable=True))
    op.add_column('control_framework_mappings', sa.Column('applicability', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('control_framework_mappings', sa.Column('evidence_hint', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('control_framework_mappings', sa.Column('rationale', sa.String(length=1024), nullable=True))
    op.drop_constraint(op.f('uq_req_ctrl'), 'control_framework_mappings', type_='unique')
    op.create_unique_constraint('uq_atom_ctrl_atom_level', 'control_framework_mappings', ['obligation_atom_id', 'control_id'])
    op.create_unique_constraint('uq_req_ctrl_article_level', 'control_framework_mappings', ['framework_requirement_id', 'control_id'])
    op.create_foreign_key(None, 'control_framework_mappings', 'obligation_atoms', ['obligation_atom_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'control_framework_mappings', type_='foreignkey')
    op.drop_constraint('uq_req_ctrl_article_level', 'control_framework_mappings', type_='unique')
    op.drop_constraint('uq_atom_ctrl_atom_level', 'control_framework_mappings', type_='unique')
    op.create_unique_constraint(op.f('uq_req_ctrl'), 'control_framework_mappings', ['framework_requirement_id', 'control_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('control_framework_mappings', 'rationale')
    op.drop_column('control_framework_mappings', 'evidence_hint')
    op.drop_column('control_framework_mappings', 'applicability')
    op.drop_column('control_framework_mappings', 'coverage_level')
    op.drop_column('control_framework_mappings', 'relation_type')
    op.drop_column('control_framework_mappings', 'obligation_atom_id')
    op.drop_table('obligation_atoms')
    # ### end Alembic commands ###
